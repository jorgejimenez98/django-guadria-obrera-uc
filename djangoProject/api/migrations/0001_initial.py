# Generated by Django 3.1.1 on 2020-10-09 23:18

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Area',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=56, unique=True)),
                ('abbreviation', models.CharField(max_length=12)),
            ],
        ),
        migrations.CreateModel(
            name='Career',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=69, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=86)),
                ('area', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='departments', to='api.area')),
            ],
            options={
                'unique_together': {('name', 'area')},
                'index_together': {('name', 'area')},
            },
        ),
        migrations.CreateModel(
            name='DutyShift',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('schedule', models.CharField(default='', max_length=36, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Person',
            fields=[
                ('CI', models.CharField(max_length=11, primary_key=True, serialize=False, unique=True)),
                ('names', models.CharField(max_length=126)),
                ('surnames', models.CharField(max_length=126)),
                ('sex', models.CharField(max_length=1)),
                ('lastStatusUpdateDate', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Province',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=36, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='SourceOfIncome',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=36, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='State',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=36, unique=True)),
                ('typeOfPerson', models.CharField(blank=True, default='', max_length=56)),
            ],
        ),
        migrations.CreateModel(
            name='TypeOfCourse',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=36, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='TypeOfStudent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=37, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='UniversitySeat',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=36, unique=True)),
                ('AOGS_Cuantity', models.PositiveIntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Faculty',
            fields=[
                ('area_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='api.area')),
            ],
            bases=('api.area',),
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('person_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='api.person')),
                ('politicalOrganization', models.CharField(max_length=126)),
                ('yearOfStudy', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('group', models.PositiveIntegerField(default=0)),
                ('career', models.ForeignKey(default=None, on_delete=django.db.models.deletion.PROTECT, related_name='students', to='api.career')),
            ],
            bases=('api.person',),
        ),
        migrations.CreateModel(
            name='Worker',
            fields=[
                ('person_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='api.person')),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='workers', to='api.department')),
            ],
            bases=('api.person',),
        ),
        migrations.AddField(
            model_name='person',
            name='state',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='api.state'),
        ),
        migrations.CreateModel(
            name='OfficialDistributionOGS',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dayOfMonth', models.PositiveIntegerField(default=0)),
                ('area', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='api.area')),
                ('universitySeat', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='officialDistributions', to='api.universityseat')),
                ('faculty', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='faculty', to='api.faculty')),
                ('guardOfficer', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='api.worker')),
            ],
            options={
                'unique_together': {('dayOfMonth', 'universitySeat', 'guardOfficer')},
                'index_together': {('dayOfMonth', 'universitySeat', 'guardOfficer')},
            },
        ),
        migrations.CreateModel(
            name='Municipality',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=36)),
                ('province', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='municipalities', to='api.province')),
            ],
            options={
                'unique_together': {('name', 'province')},
                'index_together': {('name', 'province')},
            },
        ),
        migrations.CreateModel(
            name='Guard',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('incidents', models.TextField(default='')),
                ('observations', models.TextField(default='')),
                ('universitySeat', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='guards', to='api.universityseat')),
            ],
            options={
                'unique_together': {('date', 'universitySeat')},
                'index_together': {('date', 'universitySeat')},
            },
        ),
        migrations.CreateModel(
            name='WorkersGuard',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('assistance', models.BooleanField(default=False)),
                ('departmentId', models.PositiveIntegerField(default=0)),
                ('isOGS', models.BooleanField(default=False)),
                ('guard', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='workersGuards', to='api.guard')),
                ('worker', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='api.worker')),
            ],
        ),
        migrations.CreateModel(
            name='StudentsGuard',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('assistance', models.BooleanField(default=False)),
                ('careerId', models.PositiveIntegerField(blank=True, default=0)),
                ('yearOfStudy', models.PositiveIntegerField(blank=True, default=0)),
                ('dutyShift', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='api.dutyshift')),
                ('guard', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='studentsGuards', to='api.guard')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='api.student')),
            ],
        ),
        migrations.AddField(
            model_name='student',
            name='municipality',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='api.municipality'),
        ),
        migrations.AddField(
            model_name='student',
            name='sourceOfIncome',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='api.sourceofincome'),
        ),
        migrations.AddField(
            model_name='student',
            name='typeOfCourse',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='api.typeofcourse'),
        ),
        migrations.AddField(
            model_name='student',
            name='typeOfStudent',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='api.typeofstudent'),
        ),
        migrations.CreateModel(
            name='PPAA',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('yearOfStudy', models.PositiveSmallIntegerField()),
                ('career', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='api.career')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('career', 'yearOfStudy')},
                'index_together': {('career', 'yearOfStudy')},
            },
        ),
        migrations.CreateModel(
            name='DepartmentHead',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('department', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, to='api.department')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('user', 'department')},
                'index_together': {('user', 'department')},
            },
        ),
        migrations.AddField(
            model_name='career',
            name='faculty',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='careers', to='api.faculty'),
        ),
        migrations.CreateModel(
            name='OfficialDistributionAOGS',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.PositiveIntegerField(default=0)),
                ('officialDistribution', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='AOGS_distributions', to='api.officialdistributionogs')),
                ('guardOfficerHelper', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='api.worker')),
            ],
            options={
                'unique_together': {('number', 'officialDistribution', 'guardOfficerHelper')},
                'index_together': {('number', 'officialDistribution', 'guardOfficerHelper')},
            },
        ),
        migrations.CreateModel(
            name='FacultyProgrammer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
                ('faculty', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, to='api.faculty')),
            ],
            options={
                'unique_together': {('user', 'faculty')},
                'index_together': {('user', 'faculty')},
            },
        ),
        migrations.CreateModel(
            name='Dean',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
                ('faculty', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, to='api.faculty')),
            ],
            options={
                'unique_together': {('user', 'faculty')},
                'index_together': {('user', 'faculty')},
            },
        ),
        migrations.AlterUniqueTogether(
            name='career',
            unique_together={('name', 'faculty')},
        ),
        migrations.AlterIndexTogether(
            name='career',
            index_together={('name', 'faculty')},
        ),
    ]
